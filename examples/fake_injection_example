{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Example: Fake Injection\n",
    "\n",
    "Author: Shu Liu\n",
    "\n",
    "This notebook shows how to use the fake injection framework(`/framework/fake_injection_framework.ipynb`) to perform efficiency analysis. Users are recommended to read `fake_injection_framework.ipynb` before reading this notebook."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "\n",
    "import numpy as np\n",
    "from scipy import stats\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "from astropy.table import Table\n",
    "from lsst.daf.persistence import Butler\n",
    "\n",
    "import injection_utils as iu"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Injection\n",
    "\n",
    "We want to inject fakes with magnitude 16, 16.5, 17,..., 23.5, 24 onto regions near stars (about 25 pixels away from the star, both in x and y). Stars' magnitudes are selected from the following intervals: `16 - 18`, `18 - 20`, `20 - 21`, `21 - 22`, `22 - 23`, `23 - 24`. The information of these stars are saved in check tables. For example, stars with magnitude between `21 - 22` are saved in `check22_offset_25.txt`, and stars with magnitude between `23 - 24` are saved in `check24_offset_25.txt`. The injected position is saved as `base_NaiveCentroid_x` and `base_NaiveCentroid_y` in the table.\n",
    "\n",
    "To begin with, we need to create some empty repos for injection."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a script to make empty repos for injection\n",
    "with open(f'./make_perfect_25_offset_repo.txt', \"w+\") as file:\n",
    "    file.write('#！/bin/bash\\n\\n')\n",
    "    for mag in [18, 20, 21, 22, 23, 24]:\n",
    "        for i in range(160, 245, 5):\n",
    "            line = 'cp -r /global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/empty_calexp_repo /global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/fake_data/perfect_25_offset/fake_{}_{}\\n'.format(mag, i)\n",
    "            file.write(line)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [],
   "source": [
    "# run the script\n",
    "! source ./make_perfect_25_offset_repo.txt"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Then inject fakes."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# setup data id\n",
    "tract, patch, filt = 4639, '0,0', 'r'\n",
    "visit, detector = 181868, 57\n",
    "calexp_id = {'visit': visit, 'detector': detector, 'filter': filt}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "table_dir = '/global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/star_table'\n",
    "table_pattern = 'check{}_offset_25.txt'\n",
    "\n",
    "fake_dir = '/global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/fake_data/perfect_25_offset'\n",
    "fake_pattern = 'fake_{}_{}'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "done\n"
     ]
    }
   ],
   "source": [
    "# make injection\n",
    "for host_mag in [18, 20, 21, 22, 23, 24]:\n",
    "    injection_table_path = os.path.join(table_dir, table_pattern.format(host_mag))\n",
    "    injection_table = Table.read(injection_table_path, format='ascii')\n",
    "    injection_list = []\n",
    "    for row in injection_table:\n",
    "        x, y = row['base_NaiveCentroid_x'], row['base_NaiveCentroid_y']\n",
    "        injection_list.append([x, y])\n",
    "    for fake_mag in range(160, 245, 5):\n",
    "        # convert fake_mag to the injected value\n",
    "        injected_mag = fake_mag * 0.1\n",
    "        calexp_repo = os.path.join(fake_dir, fake_pattern.format(host_mag, fake_mag))\n",
    "        iu.inject_fakes_to_calexp(calexp_repo, calexp_id, injected_mag, injection_list, poisson=False)\n",
    "print('done')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Subtraction\n",
    "\n",
    "After fake injection, we can run image subtraction on those images."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create a script for subtraction\n",
    "with open(f'./diff_perfect_25_offset.sh', \"w+\") as file:\n",
    "    file.write('#！/bin/bash\\n\\n')\n",
    "    for host_mag in [18, 20, 21, 22, 23, 24]:\n",
    "        for fake_mag in range(160, 245, 5):\n",
    "            line = 'imageDifferenceDriver.py /global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/fake_data/perfect_25_offset/fake_{}_{} \\\\\\n'.format(host_mag, fake_mag)\n",
    "            file.write(line)\n",
    "            line2 = '    --output /global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/fake_data/perfect_25_offset/al_{}_{}_offset \\\\\\n'.format(host_mag, fake_mag)\n",
    "            file.write(line2)\n",
    "            line3 = '    --id visit=181868 detector=57  -C diffimConfig_al.py \\\\\\n'\n",
    "            file.write(line3)\n",
    "            line4 = '    --clobber-config --clobber-versions --cores 4\\n'\n",
    "            file.write(line4)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Run `diff_perfect_25_offset.sh` in terminal. Then we have difference images."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Analysis\n",
    "\n",
    "For analysis, we plot the efficiency plot, flux scatter, flux residuals, and nomalized flux difference."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "diff_dir = '/global/cfs/cdirs/desc-sn/dia/data/shl159/shared_space/fake_injection/fake_data/perfect_25_offset'\n",
    "diff_pattern = 'al_{}_{}_offset'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "# calculate efficiency\n",
    "half_width = 4\n",
    "# fake_mag_array represents fake magnitudes (16, 16.5, 17,..., 23.5, 24)\n",
    "fake_mag_array = np.arange(160, 245, 5)\n",
    "fake_len = len(fake_mag_array)\n",
    "efficiency_list = []\n",
    "flux_list = []\n",
    "for host_mag in [18, 20, 21, 22, 23, 24]:\n",
    "    efficiency = np.zeros(fake_len)\n",
    "    \n",
    "    injection_table_path = os.path.join(table_dir, table_pattern.format(host_mag))\n",
    "    injection_table = Table.read(injection_table_path, format='ascii')\n",
    "    injection_list = iu.get_pix_coord_from_src(injection_table)\n",
    "\n",
    "    for i, fake_mag in enumerate(fake_mag_array):\n",
    "        # convert fake_mag to the injected value\n",
    "        injected_mag = fake_mag * 0.1\n",
    "        \n",
    "        repo = os.path.join(diff_dir, diff_pattern.format(host_mag, fake_mag))\n",
    "        butler = Butler(repo)\n",
    "        src_table = butler.get('deepDiff_diaSrc', dataId=calexp_id)\n",
    "        src_astropy = src_table.asAstropy()\n",
    "        \n",
    "        dia_calib = butler.get('deepDiff_differenceExp_photoCalib', dataId=calexp_id)\n",
    "        flux = dia_calib.magnitudeToInstFlux(injected_mag)\n",
    "        \n",
    "        diff_detected, diff_missed, dia_list = iu.check_diaSrc_detecion(injection_list, src_astropy, half_width=half_width)\n",
    "        efficiency[i] = len(diff_detected) / (len(diff_detected) + len(diff_missed))\n",
    "        \n",
    "        for i in range(len(dia_list)):\n",
    "            if len(dia_list[i]) == 0 or len(dia_list[i]) > 1:\n",
    "                continue\n",
    "            flux_triplet = [\n",
    "                flux, dia_list[i][0]['base_PsfFlux_instFlux'], dia_list[i][0]['base_PsfFlux_instFluxErr']\n",
    "            ]\n",
    "            flux_list.append(flux_triplet)\n",
    "    efficiency_list.append(efficiency)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "efficiency_name = 'eff_perfect_25_offset'\n",
    "flux_name = 'flux_perfect_25_offset'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "efficiency_array = np.array(efficiency_list)\n",
    "flux_array = np.array(flux_list)\n",
    "flux_array = flux_array.transpose()\n",
    "\n",
    "np.save(os.path.join(diff_dir, efficiency_name), efficiency_array)\n",
    "np.save(os.path.join(diff_dir, flux_name), flux_array)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "metadata": {},
   "outputs": [],
   "source": [
    "# 0.1 is used to convert fake_mag to the injected value\n",
    "injected_mag_array = fake_mag_array * 0.1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x2aab2ddce400>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "LABEL_LIST = ['host mag: 16 -18', 'host mag: 18 - 20', 'host mag: 20 - 21',\n",
    "              'host mag: 21 - 22', 'host mag: 22 - 23', 'host mag: 23 - 24']\n",
    "for i in range(len(efficiency_array)):\n",
    "    plt.plot(injected_mag_array, efficiency_array[i], label=LABEL_LIST[i])\n",
    "    plt.xlabel('fake mag', size=14)\n",
    "    plt.ylabel('efficiency', size=14)\n",
    "    plt.title('efficiency vs. fake mag')\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=((5,5)))\n",
    "ax.scatter(flux_array[0], flux_array[1], marker='.')\n",
    "\n",
    "lims = [\n",
    "    np.min([ax.get_xlim(), ax.get_ylim()]),  \n",
    "    np.max([ax.get_xlim(), ax.get_ylim()]),  \n",
    "]\n",
    "ax.plot(lims, lims, '-', alpha=0.5)\n",
    "ax.set_xlim(lims)\n",
    "ax.set_ylim(lims)\n",
    "\n",
    "ax.set_xlabel('injected flux', size=15)\n",
    "ax.set_ylabel('detected flux', size=15)\n",
    "ax.set_title('flux scatter', size=15)\n",
    "plt.grid()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Flux Residuals')"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(flux_array[0], (flux_array[1] - flux_array[0]) / flux_array[0], '.')\n",
    "plt.xlabel('injected flux', size=10)\n",
    "plt.ylabel('(detected flux - injected flux) / injected flux', size=10)\n",
    "plt.ylim(-0.6, 0.6)\n",
    "plt.title('Flux Residuals', size=14)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x2aab313fbcf8>"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "delta_flux = (flux_array[1] - flux_array[0]) / flux_array[2]\n",
    "delta_flux = delta_flux.reshape(-1,1)\n",
    "\n",
    "plt.figure()\n",
    "\n",
    "# plot the distribution of the data\n",
    "plt.hist(delta_flux, density=True, bins=100, align='mid')\n",
    "plt.title(r'Normalized Flux Difference Distribution', size=14)\n",
    "plt.xlim(-20, 20)\n",
    "\n",
    "# plot a standard normal distribuiton\n",
    "rv10 = stats.norm(loc=0., scale=1.0)\n",
    "x = np.arange(-5,5.1,0.1)\n",
    "plt.plot(x, rv10.pdf(x), label='sigma=1.0')\n",
    "plt.xlabel(r'$\\frac{\\Delta Flux}{\\sigma}$', size=15)\n",
    "plt.ylabel('{} bins, [total = {} data points]'.format(100, len(delta_flux)), size=12)\n",
    "plt.xlim(-15, 15)\n",
    "plt.legend()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "table_dir = './'\n",
    "eff_table_name = 'eff_perfect_25_offset.csv'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "efficiency_table = pd.DataFrame(\n",
    "    {'fake_mag': injected_mag_array, 'eff_host_16-18': efficiency_array[0],\n",
    "     'eff_host_18-20': efficiency_array[1], 'eff_host_20-21': efficiency_array[2],\n",
    "     'eff_host_21-22': efficiency_array[3], 'eff_host_22-23': efficiency_array[4],\n",
    "     'eff_host_23-24': efficiency_array[5]}\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "# save efficiency to a table\n",
    "efficiency_table.to_csv(os.path.join(table_dir, eff_table_name), index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "desc-dia",
   "language": "python",
   "name": "desc-dia"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
